/* eslint no-new: off */
import InstantSearch from '../InstantSearch';

var usage = '\nUsage: instantsearch({\n  indexName: \'my_index_name\',\n  searchClient: algoliasearch(\'appId\', \'apiKey\')\n});';

// THROWAWAY: Test suite to remove once the next major version is released
describe('InstantSearch API collision', function () {
  describe('with search client', function () {
    var appId = 'appId';
    var apiKey = 'apiKey';
    var indexName = 'indexName';
    var searchClient = {
      search: function search() {}
    };

    it('and indexName', function () {
      expect(function () {
        new InstantSearch({
          indexName: indexName,
          searchClient: searchClient
        });
      }).not.toThrow();
    });

    it('and nothing else', function () {
      expect(function () {
        new InstantSearch({
          searchClient: searchClient
        });
      }).toThrow(usage);
    });

    it('and appId', function () {
      expect(function () {
        new InstantSearch({
          appId: appId,
          searchClient: searchClient
        });
      }).toThrow(usage);
    });

    it('and apiKey', function () {
      expect(function () {
        new InstantSearch({
          apiKey: apiKey,
          searchClient: searchClient
        });
      }).toThrow(usage);
    });

    it('and createAlgoliaClient', function () {
      expect(function () {
        new InstantSearch({
          createAlgoliaClient: function createAlgoliaClient() {},
          searchClient: searchClient
        });
      }).toThrow(usage);
    });
  });
});